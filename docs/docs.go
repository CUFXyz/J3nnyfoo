// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/data": {
            "get": {
                "description": "Returns an array of JSONS with data",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns whole data what stored in PostgreSQL",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/dbstatus": {
            "get": {
                "description": "Returns status of PostgreSQL in json",
                "produces": [
                    "application/json"
                ],
                "summary": "Status of PostgreSQL",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/sent": {
            "post": {
                "description": "Sending JSON to service and saving in PostgreSQL",
                "consumes": [
                    "application/json"
                ],
                "summary": "Sending data to PostgreSQL",
                "parameters": [
                    {
                        "description": "name of the product",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "price of the product",
                        "name": "price",
                        "in": "body",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "type of the product",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "brand or name",
                        "name": "owner",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:9090",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "J3nnyFoo JSON Project",
	Description:      "Small project what accepts jsons and storing it in the postgreSQL",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
